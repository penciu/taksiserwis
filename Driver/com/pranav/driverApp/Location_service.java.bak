package com.pranav.driverApp;
//		startService(new Intent(getBaseContext(), Location_service.class));
//stopService(new Intent(getBaseContext(), Location_service.class));


//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.location.LocationClient;
import com.google.android.gms.location.LocationListener;
import com.google.android.gms.location.LocationRequest;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
//import android.content.SharedPreferences.Editor;
import android.location.Location;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.IBinder;
//import android.telephony.TelephonyManager;
import android.util.Log;
import android.widget.Toast;

public class Location_service extends Service implements LocationListener,GooglePlayServicesClient.ConnectionCallbacks,
GooglePlayServicesClient.OnConnectionFailedListener{

	LocationManager lm;
	LocationClient lc;
	LocationListener ls;
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Toast.makeText(this, "Service Started", Toast.LENGTH_LONG).show();
		lc=new LocationClient(this,this,this);
		try
		{
		lc.connect();}
		catch(Exception e)
		{
			Log.e("driverapp",e.toString());
		}
		return START_STICKY;
		}
	
	@Override
	public void onDestroy() {
	super.onDestroy();
	android.os.Process.killProcess(android.os.Process.myPid());
	Toast.makeText(this, "Service Destroyed", Toast.LENGTH_LONG).show();
	}
	@Override
	public void onLocationChanged(Location location) {
		String lati,longi;
		lati=Double.toString( location.getLatitude());
		longi=Double.toString(location.getLongitude());
		String msg="Location:"+location.getLatitude()+","+location.getLongitude();
		Toast.makeText(this,msg,Toast.LENGTH_LONG).show();
		//TelephonyManager mngr = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE); 
      //  final String id = mngr.getDeviceId();
        Log.d("test","attempting to send");
      
        //send name,pass,lat,lon
      //Getting values using sharred preferences
        SharedPreferences prfs = getSharedPreferences("com.javapapers.android", Context.MODE_PRIVATE);
        String uname = prfs.getString("name", "emailid please");
        String pass=prfs.getString("pass", "passwordplease");
        
		String url="http://testapp1pranav.appspot.com/location?name="+uname+"&pass="+pass+"&lat="+lati+"&lon="+longi;
		SharedPreferences.Editor editor=prfs.edit(); 
		   /*Editor editor = spref.edit();*/
		      editor.putString("url", url);
		      editor.commit();

		
		Thread t1 = new Thread()
		{
			public void run()
			{

				//send to server
				   try
				   {
					   SharedPreferences spref = getSharedPreferences("com.javapapers.android", Context.MODE_PRIVATE);

						String url = spref.getString("url", "");
						
					URL obj = new URL(url);
					HttpURLConnection con = (HttpURLConnection) obj.openConnection();
			 
					// optional default is GET
					con.setRequestMethod("GET");
			 
					//add request header
					con.setRequestProperty("User-Agent", "Mozilla/5.0");
			 
					int responseCode = con.getResponseCode();

					if(responseCode!=200)
					//	Toast.makeText(this,"ERROR:Server responded with response code "+responseCode,Toast.LENGTH_LONG).show();
						Log.e("Driverapp", "ERROR: Server responded with "+responseCode);
//					BufferedReader in = new BufferedReader(
//					        new InputStreamReader(con.getInputStream()));
//					String inputLine;
//					StringBuffer response = new StringBuffer();
//			 
//					while ((inputLine = in.readLine()) != null) {
//						response.append(inputLine);
//					}
//					in.close();
//					
					
					//String resp= response.toString();
				   }
				   catch(Exception e)
				   {
					   Log.e("Driverapp", e.toString());
					   
				   }

					
					

				
			}
		};
		t1.start();
		
					
		
	}
	@Override
	public void onConnectionFailed(ConnectionResult arg0) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void onConnected(Bundle arg0) {
		
		LocationRequest request=LocationRequest.create();
		request.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
		request.setInterval(50000);
		request.setFastestInterval(30000);
		lc.requestLocationUpdates(request,this);
		
	}
	@Override
	public void onDisconnected() {
		// TODO Auto-generated method stub
		
	}

}
